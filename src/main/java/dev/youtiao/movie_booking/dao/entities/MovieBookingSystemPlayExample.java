package dev.youtiao.movie_booking.dao.entities;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class MovieBookingSystemPlayExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table movie_booking_system_play
     *
     * @mbg.generated Tue Aug 05 11:51:48 PDT 2025
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table movie_booking_system_play
     *
     * @mbg.generated Tue Aug 05 11:51:48 PDT 2025
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table movie_booking_system_play
     *
     * @mbg.generated Tue Aug 05 11:51:48 PDT 2025
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table movie_booking_system_play
     *
     * @mbg.generated Tue Aug 05 11:51:48 PDT 2025
     */
    public MovieBookingSystemPlayExample() {
        oredCriteria = new ArrayList<>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table movie_booking_system_play
     *
     * @mbg.generated Tue Aug 05 11:51:48 PDT 2025
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table movie_booking_system_play
     *
     * @mbg.generated Tue Aug 05 11:51:48 PDT 2025
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table movie_booking_system_play
     *
     * @mbg.generated Tue Aug 05 11:51:48 PDT 2025
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table movie_booking_system_play
     *
     * @mbg.generated Tue Aug 05 11:51:48 PDT 2025
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table movie_booking_system_play
     *
     * @mbg.generated Tue Aug 05 11:51:48 PDT 2025
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table movie_booking_system_play
     *
     * @mbg.generated Tue Aug 05 11:51:48 PDT 2025
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table movie_booking_system_play
     *
     * @mbg.generated Tue Aug 05 11:51:48 PDT 2025
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table movie_booking_system_play
     *
     * @mbg.generated Tue Aug 05 11:51:48 PDT 2025
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table movie_booking_system_play
     *
     * @mbg.generated Tue Aug 05 11:51:48 PDT 2025
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table movie_booking_system_play
     *
     * @mbg.generated Tue Aug 05 11:51:48 PDT 2025
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table movie_booking_system_play
     *
     * @mbg.generated Tue Aug 05 11:51:48 PDT 2025
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andPlayIdIsNull() {
            addCriterion("play_id is null");
            return (Criteria) this;
        }

        public Criteria andPlayIdIsNotNull() {
            addCriterion("play_id is not null");
            return (Criteria) this;
        }

        public Criteria andPlayIdEqualTo(Integer value) {
            addCriterion("play_id =", value, "playId");
            return (Criteria) this;
        }

        public Criteria andPlayIdNotEqualTo(Integer value) {
            addCriterion("play_id <>", value, "playId");
            return (Criteria) this;
        }

        public Criteria andPlayIdGreaterThan(Integer value) {
            addCriterion("play_id >", value, "playId");
            return (Criteria) this;
        }

        public Criteria andPlayIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("play_id >=", value, "playId");
            return (Criteria) this;
        }

        public Criteria andPlayIdLessThan(Integer value) {
            addCriterion("play_id <", value, "playId");
            return (Criteria) this;
        }

        public Criteria andPlayIdLessThanOrEqualTo(Integer value) {
            addCriterion("play_id <=", value, "playId");
            return (Criteria) this;
        }

        public Criteria andPlayIdIn(List<Integer> values) {
            addCriterion("play_id in", values, "playId");
            return (Criteria) this;
        }

        public Criteria andPlayIdNotIn(List<Integer> values) {
            addCriterion("play_id not in", values, "playId");
            return (Criteria) this;
        }

        public Criteria andPlayIdBetween(Integer value1, Integer value2) {
            addCriterion("play_id between", value1, value2, "playId");
            return (Criteria) this;
        }

        public Criteria andPlayIdNotBetween(Integer value1, Integer value2) {
            addCriterion("play_id not between", value1, value2, "playId");
            return (Criteria) this;
        }

        public Criteria andStartFromIsNull() {
            addCriterion("start_from is null");
            return (Criteria) this;
        }

        public Criteria andStartFromIsNotNull() {
            addCriterion("start_from is not null");
            return (Criteria) this;
        }

        public Criteria andStartFromEqualTo(Date value) {
            addCriterionForJDBCDate("start_from =", value, "startFrom");
            return (Criteria) this;
        }

        public Criteria andStartFromNotEqualTo(Date value) {
            addCriterionForJDBCDate("start_from <>", value, "startFrom");
            return (Criteria) this;
        }

        public Criteria andStartFromGreaterThan(Date value) {
            addCriterionForJDBCDate("start_from >", value, "startFrom");
            return (Criteria) this;
        }

        public Criteria andStartFromGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("start_from >=", value, "startFrom");
            return (Criteria) this;
        }

        public Criteria andStartFromLessThan(Date value) {
            addCriterionForJDBCDate("start_from <", value, "startFrom");
            return (Criteria) this;
        }

        public Criteria andStartFromLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("start_from <=", value, "startFrom");
            return (Criteria) this;
        }

        public Criteria andStartFromIn(List<Date> values) {
            addCriterionForJDBCDate("start_from in", values, "startFrom");
            return (Criteria) this;
        }

        public Criteria andStartFromNotIn(List<Date> values) {
            addCriterionForJDBCDate("start_from not in", values, "startFrom");
            return (Criteria) this;
        }

        public Criteria andStartFromBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("start_from between", value1, value2, "startFrom");
            return (Criteria) this;
        }

        public Criteria andStartFromNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("start_from not between", value1, value2, "startFrom");
            return (Criteria) this;
        }

        public Criteria andEndAtIsNull() {
            addCriterion("end_at is null");
            return (Criteria) this;
        }

        public Criteria andEndAtIsNotNull() {
            addCriterion("end_at is not null");
            return (Criteria) this;
        }

        public Criteria andEndAtEqualTo(Date value) {
            addCriterionForJDBCDate("end_at =", value, "endAt");
            return (Criteria) this;
        }

        public Criteria andEndAtNotEqualTo(Date value) {
            addCriterionForJDBCDate("end_at <>", value, "endAt");
            return (Criteria) this;
        }

        public Criteria andEndAtGreaterThan(Date value) {
            addCriterionForJDBCDate("end_at >", value, "endAt");
            return (Criteria) this;
        }

        public Criteria andEndAtGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("end_at >=", value, "endAt");
            return (Criteria) this;
        }

        public Criteria andEndAtLessThan(Date value) {
            addCriterionForJDBCDate("end_at <", value, "endAt");
            return (Criteria) this;
        }

        public Criteria andEndAtLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("end_at <=", value, "endAt");
            return (Criteria) this;
        }

        public Criteria andEndAtIn(List<Date> values) {
            addCriterionForJDBCDate("end_at in", values, "endAt");
            return (Criteria) this;
        }

        public Criteria andEndAtNotIn(List<Date> values) {
            addCriterionForJDBCDate("end_at not in", values, "endAt");
            return (Criteria) this;
        }

        public Criteria andEndAtBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("end_at between", value1, value2, "endAt");
            return (Criteria) this;
        }

        public Criteria andEndAtNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("end_at not between", value1, value2, "endAt");
            return (Criteria) this;
        }

        public Criteria andPriceIsNull() {
            addCriterion("price is null");
            return (Criteria) this;
        }

        public Criteria andPriceIsNotNull() {
            addCriterion("price is not null");
            return (Criteria) this;
        }

        public Criteria andPriceEqualTo(BigDecimal value) {
            addCriterion("price =", value, "price");
            return (Criteria) this;
        }

        public Criteria andPriceNotEqualTo(BigDecimal value) {
            addCriterion("price <>", value, "price");
            return (Criteria) this;
        }

        public Criteria andPriceGreaterThan(BigDecimal value) {
            addCriterion("price >", value, "price");
            return (Criteria) this;
        }

        public Criteria andPriceGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("price >=", value, "price");
            return (Criteria) this;
        }

        public Criteria andPriceLessThan(BigDecimal value) {
            addCriterion("price <", value, "price");
            return (Criteria) this;
        }

        public Criteria andPriceLessThanOrEqualTo(BigDecimal value) {
            addCriterion("price <=", value, "price");
            return (Criteria) this;
        }

        public Criteria andPriceIn(List<BigDecimal> values) {
            addCriterion("price in", values, "price");
            return (Criteria) this;
        }

        public Criteria andPriceNotIn(List<BigDecimal> values) {
            addCriterion("price not in", values, "price");
            return (Criteria) this;
        }

        public Criteria andPriceBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("price between", value1, value2, "price");
            return (Criteria) this;
        }

        public Criteria andPriceNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("price not between", value1, value2, "price");
            return (Criteria) this;
        }

        public Criteria andMovieIdIsNull() {
            addCriterion("movie_id is null");
            return (Criteria) this;
        }

        public Criteria andMovieIdIsNotNull() {
            addCriterion("movie_id is not null");
            return (Criteria) this;
        }

        public Criteria andMovieIdEqualTo(Integer value) {
            addCriterion("movie_id =", value, "movieId");
            return (Criteria) this;
        }

        public Criteria andMovieIdNotEqualTo(Integer value) {
            addCriterion("movie_id <>", value, "movieId");
            return (Criteria) this;
        }

        public Criteria andMovieIdGreaterThan(Integer value) {
            addCriterion("movie_id >", value, "movieId");
            return (Criteria) this;
        }

        public Criteria andMovieIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("movie_id >=", value, "movieId");
            return (Criteria) this;
        }

        public Criteria andMovieIdLessThan(Integer value) {
            addCriterion("movie_id <", value, "movieId");
            return (Criteria) this;
        }

        public Criteria andMovieIdLessThanOrEqualTo(Integer value) {
            addCriterion("movie_id <=", value, "movieId");
            return (Criteria) this;
        }

        public Criteria andMovieIdIn(List<Integer> values) {
            addCriterion("movie_id in", values, "movieId");
            return (Criteria) this;
        }

        public Criteria andMovieIdNotIn(List<Integer> values) {
            addCriterion("movie_id not in", values, "movieId");
            return (Criteria) this;
        }

        public Criteria andMovieIdBetween(Integer value1, Integer value2) {
            addCriterion("movie_id between", value1, value2, "movieId");
            return (Criteria) this;
        }

        public Criteria andMovieIdNotBetween(Integer value1, Integer value2) {
            addCriterion("movie_id not between", value1, value2, "movieId");
            return (Criteria) this;
        }

        public Criteria andTheatreIdIsNull() {
            addCriterion("theatre_id is null");
            return (Criteria) this;
        }

        public Criteria andTheatreIdIsNotNull() {
            addCriterion("theatre_id is not null");
            return (Criteria) this;
        }

        public Criteria andTheatreIdEqualTo(Integer value) {
            addCriterion("theatre_id =", value, "theatreId");
            return (Criteria) this;
        }

        public Criteria andTheatreIdNotEqualTo(Integer value) {
            addCriterion("theatre_id <>", value, "theatreId");
            return (Criteria) this;
        }

        public Criteria andTheatreIdGreaterThan(Integer value) {
            addCriterion("theatre_id >", value, "theatreId");
            return (Criteria) this;
        }

        public Criteria andTheatreIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("theatre_id >=", value, "theatreId");
            return (Criteria) this;
        }

        public Criteria andTheatreIdLessThan(Integer value) {
            addCriterion("theatre_id <", value, "theatreId");
            return (Criteria) this;
        }

        public Criteria andTheatreIdLessThanOrEqualTo(Integer value) {
            addCriterion("theatre_id <=", value, "theatreId");
            return (Criteria) this;
        }

        public Criteria andTheatreIdIn(List<Integer> values) {
            addCriterion("theatre_id in", values, "theatreId");
            return (Criteria) this;
        }

        public Criteria andTheatreIdNotIn(List<Integer> values) {
            addCriterion("theatre_id not in", values, "theatreId");
            return (Criteria) this;
        }

        public Criteria andTheatreIdBetween(Integer value1, Integer value2) {
            addCriterion("theatre_id between", value1, value2, "theatreId");
            return (Criteria) this;
        }

        public Criteria andTheatreIdNotBetween(Integer value1, Integer value2) {
            addCriterion("theatre_id not between", value1, value2, "theatreId");
            return (Criteria) this;
        }

        public Criteria andSeatsOccupiedIsNull() {
            addCriterion("seats_occupied is null");
            return (Criteria) this;
        }

        public Criteria andSeatsOccupiedIsNotNull() {
            addCriterion("seats_occupied is not null");
            return (Criteria) this;
        }

        public Criteria andSeatsOccupiedEqualTo(Integer value) {
            addCriterion("seats_occupied =", value, "seatsOccupied");
            return (Criteria) this;
        }

        public Criteria andSeatsOccupiedNotEqualTo(Integer value) {
            addCriterion("seats_occupied <>", value, "seatsOccupied");
            return (Criteria) this;
        }

        public Criteria andSeatsOccupiedGreaterThan(Integer value) {
            addCriterion("seats_occupied >", value, "seatsOccupied");
            return (Criteria) this;
        }

        public Criteria andSeatsOccupiedGreaterThanOrEqualTo(Integer value) {
            addCriterion("seats_occupied >=", value, "seatsOccupied");
            return (Criteria) this;
        }

        public Criteria andSeatsOccupiedLessThan(Integer value) {
            addCriterion("seats_occupied <", value, "seatsOccupied");
            return (Criteria) this;
        }

        public Criteria andSeatsOccupiedLessThanOrEqualTo(Integer value) {
            addCriterion("seats_occupied <=", value, "seatsOccupied");
            return (Criteria) this;
        }

        public Criteria andSeatsOccupiedIn(List<Integer> values) {
            addCriterion("seats_occupied in", values, "seatsOccupied");
            return (Criteria) this;
        }

        public Criteria andSeatsOccupiedNotIn(List<Integer> values) {
            addCriterion("seats_occupied not in", values, "seatsOccupied");
            return (Criteria) this;
        }

        public Criteria andSeatsOccupiedBetween(Integer value1, Integer value2) {
            addCriterion("seats_occupied between", value1, value2, "seatsOccupied");
            return (Criteria) this;
        }

        public Criteria andSeatsOccupiedNotBetween(Integer value1, Integer value2) {
            addCriterion("seats_occupied not between", value1, value2, "seatsOccupied");
            return (Criteria) this;
        }

        public Criteria andSeatsTotalIsNull() {
            addCriterion("seats_total is null");
            return (Criteria) this;
        }

        public Criteria andSeatsTotalIsNotNull() {
            addCriterion("seats_total is not null");
            return (Criteria) this;
        }

        public Criteria andSeatsTotalEqualTo(Integer value) {
            addCriterion("seats_total =", value, "seatsTotal");
            return (Criteria) this;
        }

        public Criteria andSeatsTotalNotEqualTo(Integer value) {
            addCriterion("seats_total <>", value, "seatsTotal");
            return (Criteria) this;
        }

        public Criteria andSeatsTotalGreaterThan(Integer value) {
            addCriterion("seats_total >", value, "seatsTotal");
            return (Criteria) this;
        }

        public Criteria andSeatsTotalGreaterThanOrEqualTo(Integer value) {
            addCriterion("seats_total >=", value, "seatsTotal");
            return (Criteria) this;
        }

        public Criteria andSeatsTotalLessThan(Integer value) {
            addCriterion("seats_total <", value, "seatsTotal");
            return (Criteria) this;
        }

        public Criteria andSeatsTotalLessThanOrEqualTo(Integer value) {
            addCriterion("seats_total <=", value, "seatsTotal");
            return (Criteria) this;
        }

        public Criteria andSeatsTotalIn(List<Integer> values) {
            addCriterion("seats_total in", values, "seatsTotal");
            return (Criteria) this;
        }

        public Criteria andSeatsTotalNotIn(List<Integer> values) {
            addCriterion("seats_total not in", values, "seatsTotal");
            return (Criteria) this;
        }

        public Criteria andSeatsTotalBetween(Integer value1, Integer value2) {
            addCriterion("seats_total between", value1, value2, "seatsTotal");
            return (Criteria) this;
        }

        public Criteria andSeatsTotalNotBetween(Integer value1, Integer value2) {
            addCriterion("seats_total not between", value1, value2, "seatsTotal");
            return (Criteria) this;
        }

        public Criteria andHallNoIsNull() {
            addCriterion("hall_no is null");
            return (Criteria) this;
        }

        public Criteria andHallNoIsNotNull() {
            addCriterion("hall_no is not null");
            return (Criteria) this;
        }

        public Criteria andHallNoEqualTo(Integer value) {
            addCriterion("hall_no =", value, "hallNo");
            return (Criteria) this;
        }

        public Criteria andHallNoNotEqualTo(Integer value) {
            addCriterion("hall_no <>", value, "hallNo");
            return (Criteria) this;
        }

        public Criteria andHallNoGreaterThan(Integer value) {
            addCriterion("hall_no >", value, "hallNo");
            return (Criteria) this;
        }

        public Criteria andHallNoGreaterThanOrEqualTo(Integer value) {
            addCriterion("hall_no >=", value, "hallNo");
            return (Criteria) this;
        }

        public Criteria andHallNoLessThan(Integer value) {
            addCriterion("hall_no <", value, "hallNo");
            return (Criteria) this;
        }

        public Criteria andHallNoLessThanOrEqualTo(Integer value) {
            addCriterion("hall_no <=", value, "hallNo");
            return (Criteria) this;
        }

        public Criteria andHallNoIn(List<Integer> values) {
            addCriterion("hall_no in", values, "hallNo");
            return (Criteria) this;
        }

        public Criteria andHallNoNotIn(List<Integer> values) {
            addCriterion("hall_no not in", values, "hallNo");
            return (Criteria) this;
        }

        public Criteria andHallNoBetween(Integer value1, Integer value2) {
            addCriterion("hall_no between", value1, value2, "hallNo");
            return (Criteria) this;
        }

        public Criteria andHallNoNotBetween(Integer value1, Integer value2) {
            addCriterion("hall_no not between", value1, value2, "hallNo");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table movie_booking_system_play
     *
     * @mbg.generated do_not_delete_during_merge Tue Aug 05 11:51:48 PDT 2025
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table movie_booking_system_play
     *
     * @mbg.generated Tue Aug 05 11:51:48 PDT 2025
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}